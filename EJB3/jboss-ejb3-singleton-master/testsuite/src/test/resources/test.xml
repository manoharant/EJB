<?xml version="1.0" encoding="UTF-8"?>


<project default="tests" name="JBoss EJB3 Singleton tests"
   xmlns:server="http://jboss.org/ns/test/ant/server">
  
  <!-- Define test Classpath -->
  <path id="jboss.test.classpath">
    <pathelement path="${jboss.test.path}"/>
  </path>
  
   <property environment="env"/>


  <!-- Set "jboss.dist" to JBOSS_HOME -->
  <property name="jboss.dist" value="${env.JBOSS_HOME}"/>
  
  
  <!-- Externalized locations -->
  <property name="location.resources.main" value="${basedir}/src/main/resources"/>
  <property name="location.resources.test" value="${basedir}/src/test/resources"/>
  <property name="location.target" value="${basedir}/target"/>
  <property name="location.dependencies" value="${location.target}/dependencies"/>
  <property name="location.dependencies.unpacked" value="${location.dependencies}/unpacked"/>
  <property name="location.dependencies.unpacked.jboss-test:jboss.test" value="${location.dependencies.unpacked}/jboss-test"/>
    
    <!-- We only allow dependencies lib for the test harness (not runtime components, those must come from JBOSS_HOME --> 
    <property name="location.dependencies.lib" value="${location.dependencies}/lib"/>
    <property name="location.dependencies.lib.junit:junit" value="${location.dependencies.lib}/junit.jar"/>
    <property name="location.dependencies.lib.antcontrib:antcontrib" value="${location.dependencies.lib}/ant-contrib.jar"/>
    <property name="location.dependencies.lib.ant-junit" value="${location.dependencies.lib}/ant-junit.jar"/>
  
    <property name="location.lib" value="${jboss.dist}/lib"/>
        
  <property name="location.client.lib" value="${jboss.dist}/client"/>
  <property name="location.client.lib.jbossall" value="${location.client.lib}/jbossall-client.jar"/>
    
    <!--  Ant-contrib tasks -->
    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="${location.dependencies.lib.antcontrib:antcontrib}" />
        </classpath>
    </taskdef>
  
    <!--  Ant-junit tasks-->
    <taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask">
        <classpath>
            <pathelement location="${location.dependencies.lib.ant-junit}" />
            <pathelement location="${location.dependencies.lib.junit:junit}" />
        </classpath>
    </taskdef>


   <!-- =================== -->
   <!-- Basic Configuration -->
   <!-- =================== -->

   <!-- Module name(s) & version -->
   <property name="module.name" value="ejb3"/>
   <property name="module.Name" value="JBoss Testsuite"/>
   <property name="module.version" value="DEV"/>
   <property name="module.source" value="${basedir}/src"/>
   <property name="module.output" value="${basedir}/target"/>


   <!-- ========= -->
   <!-- Libraries -->
   <!-- ========= -->
  
  <!--

  Classpath used by the Test Client

  -->
  <path id="client.classpath">

    <!-- JBoss Client Binaries -->
    <fileset dir="${location.client.lib}" includes="*.jar"/>
    <pathelement path="${location.client.lib.jbossall}" />
  </path>
  
  <!--
  
  Classpath used by Unit Tests
  
  -->
  <path id="test.classpath">
    
    <fileset dir="${location.dependencies.lib}">
    	<include name="*.jar"/>
    </fileset>
  	
    <!-- Client -->
    <path refid="client.classpath" />
    

    <!-- JUnit -->
    

    <!-- Root of jndi.properties -->
    <pathelement location="${resources}/test" />
    
    <!-- Resources required on the client CP -->
    <pathelement location="${location.target}/test-classes/" />


  </path>


   <!-- Where source files live -->
   <property name="source.java" value="${module.source}/test/java"/>
   <property name="source.etc" value="${module.source}/etc"/>
   <property name="resources" value="${location.resources.test}"/>
   <property name="source.stylesheets" value="${location.dependencies.unpacked.jboss-test:jboss.test}/stylesheets"/>

   <!-- Where build generated files will go -->
   <property name="build.reports" value="${module.output}/reports"/>
   <property name="build.testlog" value="${module.output}/log"/>
   <property name="build.classes" value="${module.output}/test-classes"/>
   <property name="build.stylesheets" value="${location.dependencies.unpacked.jboss-test:jboss.test}/stylesheets"/>


   <target name="init">
      <record name="${basedir}/build.log" append="yes" action="start" loglevel="error"/>
      <!-- Setup the version 1 classes so the tests compile -->
   </target>



   <target name="test" depends="init" if="test"
      description="Execute all tests in the given test directory.">
      <!-- For use when we do not need to pass in any special jvmargs; forks the test process -->
      <antcall target="test-with-jvmargs" inheritRefs="true">
         <param name="test" value="${test}"/>
         <!-- 
            EJBTHREE-1934 
            Webservices testcases (with JDK 1.6 variant of the AS) requires that the javax.xml.soap.*
            classes are loaded from JBoss specific jars available in JBOSS_HOME/lib/endorsed
            instead of JAVA_HOME/lib/endorsed. Else they run into 
            java.lang.UnsupportedOperationException: setProperty must be overridden by all subclasses of SOAPMessage
            See this for more details http://www.jboss.org/index.html?module=bb&op=viewtopic&t=158265
            
            Note: we could have set this property only for the webservices testcase conditionally,
            but it makes sense for all tests to use this JVM arg since that's what gets used in the AS run.sh
            scripts.
          -->
         <param name="jvmargs" value="-Djava.endorsed.dirs=${jboss.dist}/lib/endorsed"/>
      </antcall>
   </target>

   <target name="test-with-jvmargs" if="test">
      <!-- For use when we need to pass in special jvmargs -->

      <mkdir dir="${build.reports}"/>
      <mkdir dir="${build.testlog}"/>
      <!-- Remove the test.log so each run has a fresh log -->
      <delete file="${build.testlog}/test.log"/>


    <!-- Use this for debugging classpath 
    <property name="myclasspath" refid="test.classpath"/>
    <echo message="${myclasspath}" />  -->
    
      <junit dir="${module.output}"
         printsummary="yes"
         haltonerror="false"
         haltonfailure="false"
         showoutput="yes"
         fork="true"
      	failureproperty = "test.failure">

         <sysproperty key="basedir" value="${basedir}"/>
         <sysproperty key="build.testlog" value="${build.testlog}"/>
         <sysproperty key="log4j.configuration" value="file:${location.resources.test}/log4j.xml"/>


         <jvmarg line="${jvmargs}" />
         <jvmarg line="-ea" />
         <!--
           <jvmarg line="-verbose:class" /> 
            <jvmarg line="-Xrunjdwp:transport=dt_socket,address=5005,server=y,suspend=y"/>
		-->
        
         <classpath>
            <path refid="test.classpath" />
         </classpath>

         <formatter type="plain" usefile="true"/>
         <formatter type="xml" usefile="true"/>
         <!-- 
         <formatter type="xml" classname="org.jboss.ejb3.testsuite.ant.taskdefs.optional.junit.KnownIssuesXMLJunitResultFormatter"
            usefile="true" unless="test.extension"/>
            -->

         <batchtest todir="${build.reports}"
            haltonerror="false"
            haltonfailure="false"
            fork="true">

            <fileset dir="${build.classes}">
               <include name="org/jboss/ejb3/singleton/integration/test/${test}/unit/*TestCase.class"/>
            </fileset>
         </batchtest>
      </junit>
   	<antcall target="check.test.failure"/>
   </target>

   <target name="one-test" depends="init" if="test"
      description="Execute one test Junit test case.">
      <!-- For use when we do not need to pass in any special jvmargs; forks the test process -->
      <antcall target="one-test-with-jvmargs" inheritRefs="true">
         <param name="test" value="${test}"/>
         <!-- 
            EJBTHREE-1934 
            Webservices testcases (with JDK 1.6 variant of the AS) requires that the javax.xml.soap.*
            classes are loaded from JBoss specific jars available in JBOSS_HOME/lib/endorsed
            instead of JAVA_HOME/lib/endorsed. Else they run into 
            java.lang.UnsupportedOperationException: setProperty must be overridden by all subclasses of SOAPMessage
            See this for more details http://www.jboss.org/index.html?module=bb&op=viewtopic&t=158265
            
            Note: we could have set this property only for the webservices testcase conditionally,
            but it makes sense for all tests to use this JVM arg since that's what gets used in the AS run.sh
            scripts.
          -->
         <param name="jvmargs" value="-Djava.endorsed.dirs=${jboss.dist}/lib/endorsed"/>
      </antcall>
   </target>

   <!-- Single unit test -->
   <target name="one-test-with-jvmargs" if="test">
      <!-- For use when we need to pass in special jvmargs -->
      
      
      <mkdir dir="${build.reports}"/>
      <mkdir dir="${build.testlog}"/>
      <!-- Remove the test.log so each run has a fresh log -->
      <delete file="${build.testlog}/test.log"/>

      <!-- Ensure JBOSS_HOME is set -->
      <fail unless="env.JBOSS_HOME" message="Environment Variable $JBOSS_HOME must be Set" />

      <junit dir="${module.output}"
         printsummary="yes"
         haltonerror="false"
         haltonfailure="false"
         showoutput="yes"
         fork="true"
      	failureproperty = "test.failure">

         <sysproperty key="basedir" value="${basedir}"/>
         <sysproperty key="build.testlog" value="${build.testlog}"/>
         <sysproperty key="log4j.configuration" value="file:${location.resources.test}/log4j.xml"/>

         <jvmarg line="${jvmargs}" />
         <!-- <jvmarg line="${jvmargs} -Xrunjdwp:transport=dt_socket,address=8788,server=y,suspend=y" /> -->
         <classpath>
           
           <path refid="test.classpath" />
           <pathelement location="${build.classes}"/>
         </classpath>

         <formatter type="plain" usefile="true"/>
         <formatter type="xml" usefile="true"/>
         <test name="${test}" todir="${build.reports}"/>
      </junit>
   	
   		<antcall target="check.test.failure"/>
   </target>

   

   <target name="tests" depends="init" description="Execute all tests">
      <!-- For use when we do not need to pass in any special jvmargs; forks the test process -->
      <antcall target="test-with-jvmargs" inheritRefs="true">
         <param name="test" value="**"/>
         <!-- 
            EJBTHREE-1934 
            Webservices testcases (with JDK 1.6 variant of the AS) requires that the javax.xml.soap.*
            classes are loaded from JBoss specific jars available in JBOSS_HOME/lib/endorsed
            instead of JAVA_HOME/lib/endorsed. Else they run into 
            java.lang.UnsupportedOperationException: setProperty must be overridden by all subclasses of SOAPMessage
            See this for more details http://www.jboss.org/index.html?module=bb&op=viewtopic&t=158265
            
            Note: we could have set this property only for the webservices testcase conditionally,
            but it makes sense for all tests to use this JVM arg since that's what gets used in the AS run.sh
            scripts.
          -->
         <param name="jvmargs" value="-Djava.endorsed.dirs=${jboss.dist}/lib/endorsed"/>
      </antcall>
      
   </target>
   	
   	<target name="check.test.failure" if="test.failure">
   		<fail message="Some tests FAILED. Check the logs for details"/>
   	</target>

</project>   